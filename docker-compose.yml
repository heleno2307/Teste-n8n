# docker-compose.yaml - Versão Unificada

services:
  # 1. Serviço ÚNICO de Banco de Dados PostgreSQL para todos
  postgres:
    image: postgres:latest # Usando a v14 que estava no seu arquivo n8n
    container_name: database_postgres
    restart: always
    env_file:
      - .env # As variáveis POSTGRES_* virão daqui
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - evolution-net

  # 2. Serviço de Cache Redis
  redis:
    image: redis:7-alpine
    container_name: cache_redis
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - evolution-net

  # 3. Serviço da aplicação n8n
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n_app
    restart: always
    ports:
      - "5678:5678"
    environment:
      # Configurações para o n8n se conectar ao banco de dados UNIFICADO
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres # Aponta para o serviço 'postgres'
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n # Volume para persistir dados do n8n
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - evolution-net

  # 4. Serviço da Evolution API
  api:
    container_name: evolution_api
    image: atendai/evolution-api:latest
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n: # Opcional, mas garante que o n8n iniciou antes da API
        condition: service_started # Usamos started pois n8n não tem healthcheck por padrão
    networks:
      - evolution-net

# Define todos os volumes nomeados utilizados
volumes:
  postgres_data:
  redis_data:
  n8n_data:
  evolution_instances: # Presumi que este volume é usado pela API, se não, pode remover

# Define a rede compartilhada por todos os serviços
networks:
  evolution-net:
    name: evolution-net
    driver: bridge